{
  "service": {
    "service": "chehara",
    "serviceObject": {
      "name": "chehara"
    },
    "provider": {
      "stage": "dev",
      "region": "us-east-1",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._'\",\\-\\/\\(\\)]+?)}",
      "name": "aws",
      "runtime": "python2.7",
      "timeout": 60,
      "environment": {
        "NAMESPACE": "chehara-dev",
        "SLACK_TEAMS": "chehara-dev-slackteams",
        "CLIENT_ID": "245911183507.246876171814",
        "CLIENT_SECRET": "e36dcb61becc49b6e0fe9e010e0b9831",
        "GCP_API_KEY": "AIzaSyCphtFCEfnDjh318aTl5TZVWV-AKIrURQ4",
        "VERIFICATION_TOKEN": "oLoIoOKsbfxFnzlZWc35dhnG",
        "INSTALL_SUCCESS_URL": "https://s3.amazonaws.com/serverless-face-bot/index.html#success",
        "INSTALL_ERROR_URL": "https://s3.amazonaws.com/serverless-face-bot/index.html#error",
        "STATEMACHINE_ARN": {
          "Ref": "MyStateMachine"
        }
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:GetItem",
            "dynamodb:PutItem"
          ],
          "Resource": [
            "arn:aws:dynamodb:*:*:table/chehara-dev-slackteams"
          ]
        },
        {
          "Effect": "Allow",
          "Action": [
            "rekognition:*"
          ],
          "Resource": "*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "states:StartExecution"
          ],
          "Resource": [
            "*"
          ]
        }
      ],
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          },
          "InstallSlackLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/chehara-dev-installSlack"
            }
          },
          "HandleEventsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/chehara-dev-handleEvents"
            }
          },
          "ProcessEventsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/chehara-dev-processEvents"
            }
          },
          "DetectCelebrityLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/chehara-dev-detectCelebrity"
            }
          },
          "DetectLandmarkLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/chehara-dev-detectLandmark"
            }
          },
          "DetectTextLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/chehara-dev-detectText"
            }
          },
          "PostMessageLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/chehara-dev-postMessage"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "chehara",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/chehara-dev-installSlack:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/chehara-dev-handleEvents:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/chehara-dev-processEvents:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/chehara-dev-detectCelebrity:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/chehara-dev-detectLandmark:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/chehara-dev-detectText:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/chehara-dev-postMessage:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/chehara-dev-installSlack:*:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/chehara-dev-handleEvents:*:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/chehara-dev-processEvents:*:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/chehara-dev-detectCelebrity:*:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/chehara-dev-detectLandmark:*:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/chehara-dev-detectText:*:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/chehara-dev-postMessage:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:GetItem",
                          "dynamodb:PutItem"
                        ],
                        "Resource": [
                          "arn:aws:dynamodb:*:*:table/chehara-dev-slackteams"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "rekognition:*"
                        ],
                        "Resource": "*"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "states:StartExecution"
                        ],
                        "Resource": [
                          "*"
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "chehara",
                    "dev",
                    "us-east-1",
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "InstallSlackLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/chehara/dev/1507064226508-2017-10-03T20:57:06.508Z/chehara.zip"
              },
              "FunctionName": "chehara-dev-installSlack",
              "Handler": "install_slack.process",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "python2.7",
              "Timeout": 60,
              "Description": "This Lambda will be called when a user installs our bot for the first time.",
              "Tags": [
                {
                  "Key": "project",
                  "Value": "chehara"
                }
              ],
              "Environment": {
                "Variables": {
                  "NAMESPACE": "chehara-dev",
                  "SLACK_TEAMS": "chehara-dev-slackteams",
                  "CLIENT_ID": "245911183507.246876171814",
                  "CLIENT_SECRET": "e36dcb61becc49b6e0fe9e010e0b9831",
                  "GCP_API_KEY": "AIzaSyCphtFCEfnDjh318aTl5TZVWV-AKIrURQ4",
                  "VERIFICATION_TOKEN": "oLoIoOKsbfxFnzlZWc35dhnG",
                  "INSTALL_SUCCESS_URL": "https://s3.amazonaws.com/serverless-face-bot/index.html#success",
                  "INSTALL_ERROR_URL": "https://s3.amazonaws.com/serverless-face-bot/index.html#error",
                  "STATEMACHINE_ARN": {
                    "Ref": "MyStateMachine"
                  }
                }
              }
            },
            "DependsOn": [
              "InstallSlackLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "InstallSlackLambdaVersionn5tzBcyX50Jc99Q5luI1ZD9NoYUiS7LxMplwls8do": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "InstallSlackLambdaFunction"
              },
              "CodeSha256": "n+5tzBcyX50Jc99Q5luI1ZD9NoYUiS+7LxMplwls8do=",
              "Description": "This Lambda will be called when a user installs our bot for the first time."
            }
          },
          "HandleEventsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/chehara/dev/1507064226508-2017-10-03T20:57:06.508Z/chehara.zip"
              },
              "FunctionName": "chehara-dev-handleEvents",
              "Handler": "handle_events.process",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "python2.7",
              "Timeout": 60,
              "Description": "This Lambda will be called whenever Slack calls our API Gateway webhook on an event.",
              "Tags": [
                {
                  "Key": "project",
                  "Value": "chehara"
                }
              ],
              "Environment": {
                "Variables": {
                  "NAMESPACE": "chehara-dev",
                  "SLACK_TEAMS": "chehara-dev-slackteams",
                  "CLIENT_ID": "245911183507.246876171814",
                  "CLIENT_SECRET": "e36dcb61becc49b6e0fe9e010e0b9831",
                  "GCP_API_KEY": "AIzaSyCphtFCEfnDjh318aTl5TZVWV-AKIrURQ4",
                  "VERIFICATION_TOKEN": "oLoIoOKsbfxFnzlZWc35dhnG",
                  "INSTALL_SUCCESS_URL": "https://s3.amazonaws.com/serverless-face-bot/index.html#success",
                  "INSTALL_ERROR_URL": "https://s3.amazonaws.com/serverless-face-bot/index.html#error",
                  "STATEMACHINE_ARN": {
                    "Ref": "MyStateMachine"
                  }
                }
              }
            },
            "DependsOn": [
              "HandleEventsLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "HandleEventsLambdaVersionn5tzBcyX50Jc99Q5luI1ZD9NoYUiS7LxMplwls8do": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HandleEventsLambdaFunction"
              },
              "CodeSha256": "n+5tzBcyX50Jc99Q5luI1ZD9NoYUiS+7LxMplwls8do=",
              "Description": "This Lambda will be called whenever Slack calls our API Gateway webhook on an event."
            }
          },
          "ProcessEventsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/chehara/dev/1507064226508-2017-10-03T20:57:06.508Z/chehara.zip"
              },
              "FunctionName": "chehara-dev-processEvents",
              "Handler": "process_events.process",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "python2.7",
              "Timeout": 60,
              "Description": "This Lambda will be invoked by the StepFunction to start the processing of event.",
              "Tags": [
                {
                  "Key": "project",
                  "Value": "chehara"
                }
              ],
              "Environment": {
                "Variables": {
                  "NAMESPACE": "chehara-dev",
                  "SLACK_TEAMS": "chehara-dev-slackteams",
                  "CLIENT_ID": "245911183507.246876171814",
                  "CLIENT_SECRET": "e36dcb61becc49b6e0fe9e010e0b9831",
                  "GCP_API_KEY": "AIzaSyCphtFCEfnDjh318aTl5TZVWV-AKIrURQ4",
                  "VERIFICATION_TOKEN": "oLoIoOKsbfxFnzlZWc35dhnG",
                  "INSTALL_SUCCESS_URL": "https://s3.amazonaws.com/serverless-face-bot/index.html#success",
                  "INSTALL_ERROR_URL": "https://s3.amazonaws.com/serverless-face-bot/index.html#error",
                  "STATEMACHINE_ARN": {
                    "Ref": "MyStateMachine"
                  }
                }
              }
            },
            "DependsOn": [
              "ProcessEventsLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "ProcessEventsLambdaVersionn5tzBcyX50Jc99Q5luI1ZD9NoYUiS7LxMplwls8do": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ProcessEventsLambdaFunction"
              },
              "CodeSha256": "n+5tzBcyX50Jc99Q5luI1ZD9NoYUiS+7LxMplwls8do=",
              "Description": "This Lambda will be invoked by the StepFunction to start the processing of event."
            }
          },
          "DetectCelebrityLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/chehara/dev/1507064226508-2017-10-03T20:57:06.508Z/chehara.zip"
              },
              "FunctionName": "chehara-dev-detectCelebrity",
              "Handler": "detect_celebrity.process",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "python2.7",
              "Timeout": 60,
              "Description": "This Lambda will be invoked by the StepFunction to detect celebrities in the given image.",
              "Tags": [
                {
                  "Key": "project",
                  "Value": "chehara"
                }
              ],
              "Environment": {
                "Variables": {
                  "NAMESPACE": "chehara-dev",
                  "SLACK_TEAMS": "chehara-dev-slackteams",
                  "CLIENT_ID": "245911183507.246876171814",
                  "CLIENT_SECRET": "e36dcb61becc49b6e0fe9e010e0b9831",
                  "GCP_API_KEY": "AIzaSyCphtFCEfnDjh318aTl5TZVWV-AKIrURQ4",
                  "VERIFICATION_TOKEN": "oLoIoOKsbfxFnzlZWc35dhnG",
                  "INSTALL_SUCCESS_URL": "https://s3.amazonaws.com/serverless-face-bot/index.html#success",
                  "INSTALL_ERROR_URL": "https://s3.amazonaws.com/serverless-face-bot/index.html#error",
                  "STATEMACHINE_ARN": {
                    "Ref": "MyStateMachine"
                  }
                }
              }
            },
            "DependsOn": [
              "DetectCelebrityLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "DetectCelebrityLambdaVersionn5tzBcyX50Jc99Q5luI1ZD9NoYUiS7LxMplwls8do": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DetectCelebrityLambdaFunction"
              },
              "CodeSha256": "n+5tzBcyX50Jc99Q5luI1ZD9NoYUiS+7LxMplwls8do=",
              "Description": "This Lambda will be invoked by the StepFunction to detect celebrities in the given image."
            }
          },
          "DetectLandmarkLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/chehara/dev/1507064226508-2017-10-03T20:57:06.508Z/chehara.zip"
              },
              "FunctionName": "chehara-dev-detectLandmark",
              "Handler": "detect_landmark.process",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "python2.7",
              "Timeout": 60,
              "Description": "This Lambda will be invoked by the StepFunction to detect landmarks in the given image.",
              "Tags": [
                {
                  "Key": "project",
                  "Value": "chehara"
                }
              ],
              "Environment": {
                "Variables": {
                  "NAMESPACE": "chehara-dev",
                  "SLACK_TEAMS": "chehara-dev-slackteams",
                  "CLIENT_ID": "245911183507.246876171814",
                  "CLIENT_SECRET": "e36dcb61becc49b6e0fe9e010e0b9831",
                  "GCP_API_KEY": "AIzaSyCphtFCEfnDjh318aTl5TZVWV-AKIrURQ4",
                  "VERIFICATION_TOKEN": "oLoIoOKsbfxFnzlZWc35dhnG",
                  "INSTALL_SUCCESS_URL": "https://s3.amazonaws.com/serverless-face-bot/index.html#success",
                  "INSTALL_ERROR_URL": "https://s3.amazonaws.com/serverless-face-bot/index.html#error",
                  "STATEMACHINE_ARN": {
                    "Ref": "MyStateMachine"
                  }
                }
              }
            },
            "DependsOn": [
              "DetectLandmarkLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "DetectLandmarkLambdaVersionn5tzBcyX50Jc99Q5luI1ZD9NoYUiS7LxMplwls8do": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DetectLandmarkLambdaFunction"
              },
              "CodeSha256": "n+5tzBcyX50Jc99Q5luI1ZD9NoYUiS+7LxMplwls8do=",
              "Description": "This Lambda will be invoked by the StepFunction to detect landmarks in the given image."
            }
          },
          "DetectTextLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/chehara/dev/1507064226508-2017-10-03T20:57:06.508Z/chehara.zip"
              },
              "FunctionName": "chehara-dev-detectText",
              "Handler": "detect_text.process",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "python2.7",
              "Timeout": 60,
              "Description": "This Lambda will be invoked by the StepFunction to detect text in the given image.",
              "Tags": [
                {
                  "Key": "project",
                  "Value": "chehara"
                }
              ],
              "Environment": {
                "Variables": {
                  "NAMESPACE": "chehara-dev",
                  "SLACK_TEAMS": "chehara-dev-slackteams",
                  "CLIENT_ID": "245911183507.246876171814",
                  "CLIENT_SECRET": "e36dcb61becc49b6e0fe9e010e0b9831",
                  "GCP_API_KEY": "AIzaSyCphtFCEfnDjh318aTl5TZVWV-AKIrURQ4",
                  "VERIFICATION_TOKEN": "oLoIoOKsbfxFnzlZWc35dhnG",
                  "INSTALL_SUCCESS_URL": "https://s3.amazonaws.com/serverless-face-bot/index.html#success",
                  "INSTALL_ERROR_URL": "https://s3.amazonaws.com/serverless-face-bot/index.html#error",
                  "STATEMACHINE_ARN": {
                    "Ref": "MyStateMachine"
                  }
                }
              }
            },
            "DependsOn": [
              "DetectTextLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "DetectTextLambdaVersionn5tzBcyX50Jc99Q5luI1ZD9NoYUiS7LxMplwls8do": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DetectTextLambdaFunction"
              },
              "CodeSha256": "n+5tzBcyX50Jc99Q5luI1ZD9NoYUiS+7LxMplwls8do=",
              "Description": "This Lambda will be invoked by the StepFunction to detect text in the given image."
            }
          },
          "PostMessageLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/chehara/dev/1507064226508-2017-10-03T20:57:06.508Z/chehara.zip"
              },
              "FunctionName": "chehara-dev-postMessage",
              "Handler": "post_message.process",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "python2.7",
              "Timeout": 60,
              "Description": "This Lambda will be invoked by the StepFunction to post the results of detection in the Slack channel.",
              "Tags": [
                {
                  "Key": "project",
                  "Value": "chehara"
                }
              ],
              "Environment": {
                "Variables": {
                  "NAMESPACE": "chehara-dev",
                  "SLACK_TEAMS": "chehara-dev-slackteams",
                  "CLIENT_ID": "245911183507.246876171814",
                  "CLIENT_SECRET": "e36dcb61becc49b6e0fe9e010e0b9831",
                  "GCP_API_KEY": "AIzaSyCphtFCEfnDjh318aTl5TZVWV-AKIrURQ4",
                  "VERIFICATION_TOKEN": "oLoIoOKsbfxFnzlZWc35dhnG",
                  "INSTALL_SUCCESS_URL": "https://s3.amazonaws.com/serverless-face-bot/index.html#success",
                  "INSTALL_ERROR_URL": "https://s3.amazonaws.com/serverless-face-bot/index.html#error",
                  "STATEMACHINE_ARN": {
                    "Ref": "MyStateMachine"
                  }
                }
              }
            },
            "DependsOn": [
              "PostMessageLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "PostMessageLambdaVersionn5tzBcyX50Jc99Q5luI1ZD9NoYUiS7LxMplwls8do": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PostMessageLambdaFunction"
              },
              "CodeSha256": "n+5tzBcyX50Jc99Q5luI1ZD9NoYUiS+7LxMplwls8do=",
              "Description": "This Lambda will be invoked by the StepFunction to post the results of detection in the Slack channel."
            }
          },
          "IamRoleStateMachineExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "states.us-east-1.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "dev-us-east-1-chehara-statemachine",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "lambda:InvokeFunction"
                        ],
                        "Resource": "*"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "MyStateMachine": {
            "Type": "AWS::StepFunctions::StateMachine",
            "Properties": {
              "DefinitionString": "{\"Comment\":\"A StepFunction that farms out image recognition through various services\",\"StartAt\":\"ProcessSlackEvent\",\"States\":{\"ProcessSlackEvent\":{\"Type\":\"Task\",\"Resource\":\"arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:chehara-dev-processEvents\",\"Comment\":\"Farm out detection tasks to various AI services\",\"Next\":\"Parallel\"},\"Parallel\":{\"Type\":\"Parallel\",\"Branches\":[{\"StartAt\":\"DetectCelebrity\",\"States\":{\"DetectCelebrity\":{\"Type\":\"Task\",\"Resource\":\"arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:chehara-dev-detectCelebrity\",\"Comment\":\"Call AWS Rekognition to detect celebrities in the given image\",\"TimeoutSeconds\":60,\"End\":true}}},{\"StartAt\":\"DetectLandmark\",\"States\":{\"DetectLandmark\":{\"Type\":\"Task\",\"Resource\":\"arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:chehara-dev-detectLandmark\",\"Comment\":\"Call Google Vision API to detect landmarks in the given image\",\"TimeoutSeconds\":60,\"End\":true}}},{\"StartAt\":\"DetectText\",\"States\":{\"DetectText\":{\"Type\":\"Task\",\"Resource\":\"arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:chehara-dev-detectText\",\"Comment\":\"Call Google Vision API to detect text in the given image\",\"TimeoutSeconds\":60,\"End\":true}}}],\"Next\":\"PostMessage\"},\"PostMessage\":{\"Type\":\"Task\",\"Resource\":\"arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:chehara-dev-postMessage\",\"Comment\":\"Consolidate results from various vision services and post message back to Slack channel\",\"TimeoutSeconds\":60,\"End\":true}}}",
              "RoleArn": {
                "Fn::GetAtt": [
                  "IamRoleStateMachineExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": "IamRoleStateMachineExecution"
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-chehara"
            }
          },
          "ApiGatewayResourceInstall": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "install",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceEvents": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "events",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodInstallGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceInstall"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "InstallSlackLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodEventsPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceEvents"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HandleEventsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1507064226622": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodInstallGet",
              "ApiGatewayMethodEventsPost"
            ]
          },
          "InstallSlackLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "InstallSlackLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "HandleEventsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HandleEventsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SlackDynamoDbTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "chehara-dev-slackteams",
              "AttributeDefinitions": [
                {
                  "AttributeName": "team_id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "team_id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 5,
                "WriteCapacityUnits": 5
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "InstallSlackLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "InstallSlackLambdaVersionn5tzBcyX50Jc99Q5luI1ZD9NoYUiS7LxMplwls8do"
            }
          },
          "HandleEventsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HandleEventsLambdaVersionn5tzBcyX50Jc99Q5luI1ZD9NoYUiS7LxMplwls8do"
            }
          },
          "ProcessEventsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ProcessEventsLambdaVersionn5tzBcyX50Jc99Q5luI1ZD9NoYUiS7LxMplwls8do"
            }
          },
          "DetectCelebrityLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DetectCelebrityLambdaVersionn5tzBcyX50Jc99Q5luI1ZD9NoYUiS7LxMplwls8do"
            }
          },
          "DetectLandmarkLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DetectLandmarkLambdaVersionn5tzBcyX50Jc99Q5luI1ZD9NoYUiS7LxMplwls8do"
            }
          },
          "DetectTextLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DetectTextLambdaVersionn5tzBcyX50Jc99Q5luI1ZD9NoYUiS7LxMplwls8do"
            }
          },
          "PostMessageLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PostMessageLambdaVersionn5tzBcyX50Jc99Q5luI1ZD9NoYUiS7LxMplwls8do"
            }
          },
          "MyStateMachineArn": {
            "Description": "Current StateMachine Arn",
            "Value": {
              "Ref": "MyStateMachine"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.us-east-1.amazonaws.com/dev"
                ]
              ]
            }
          },
          "MyStateMachine": {
            "Description": "Get a reference to the StepFunction in the MyStateMachine variable",
            "Value": {
              "Ref": "MyStateMachine"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "namespace": "chehara-dev",
      "stage": "dev"
    },
    "plugins": [
      "serverless-step-functions",
      "serverless-pseudo-parameters"
    ],
    "functions": {
      "installSlack": {
        "handler": "install_slack.process",
        "description": "This Lambda will be called when a user installs our bot for the first time.",
        "tags": {
          "project": "chehara"
        },
        "events": [
          {
            "http": {
              "path": "install",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "chehara-dev-installSlack",
        "package": {},
        "vpc": {}
      },
      "handleEvents": {
        "handler": "handle_events.process",
        "description": "This Lambda will be called whenever Slack calls our API Gateway webhook on an event.",
        "tags": {
          "project": "chehara"
        },
        "events": [
          {
            "http": {
              "path": "events",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "chehara-dev-handleEvents",
        "package": {},
        "vpc": {}
      },
      "processEvents": {
        "handler": "process_events.process",
        "description": "This Lambda will be invoked by the StepFunction to start the processing of event.",
        "tags": {
          "project": "chehara"
        },
        "events": [],
        "name": "chehara-dev-processEvents",
        "package": {},
        "vpc": {}
      },
      "detectCelebrity": {
        "handler": "detect_celebrity.process",
        "description": "This Lambda will be invoked by the StepFunction to detect celebrities in the given image.",
        "tags": {
          "project": "chehara"
        },
        "events": [],
        "name": "chehara-dev-detectCelebrity",
        "package": {},
        "vpc": {}
      },
      "detectLandmark": {
        "handler": "detect_landmark.process",
        "description": "This Lambda will be invoked by the StepFunction to detect landmarks in the given image.",
        "tags": {
          "project": "chehara"
        },
        "events": [],
        "name": "chehara-dev-detectLandmark",
        "package": {},
        "vpc": {}
      },
      "detectText": {
        "handler": "detect_text.process",
        "description": "This Lambda will be invoked by the StepFunction to detect text in the given image.",
        "tags": {
          "project": "chehara"
        },
        "events": [],
        "name": "chehara-dev-detectText",
        "package": {},
        "vpc": {}
      },
      "postMessage": {
        "handler": "post_message.process",
        "description": "This Lambda will be invoked by the StepFunction to post the results of detection in the Slack channel.",
        "tags": {
          "project": "chehara"
        },
        "events": [],
        "name": "chehara-dev-postMessage",
        "package": {},
        "vpc": {}
      }
    },
    "resources": {
      "Outputs": {
        "MyStateMachine": {
          "Description": "Get a reference to the StepFunction in the MyStateMachine variable",
          "Value": {
            "Ref": "MyStateMachine"
          }
        }
      },
      "Resources": {
        "SlackDynamoDbTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "chehara-dev-slackteams",
            "AttributeDefinitions": [
              {
                "AttributeName": "team_id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "team_id",
                "KeyType": "HASH"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 5,
              "WriteCapacityUnits": 5
            }
          }
        }
      }
    },
    "stepFunctions": {
      "stateMachines": {
        "imageSleuthStepMachine": {
          "name": "myStateMachine",
          "definition": {
            "Comment": "A StepFunction that farms out image recognition through various services",
            "StartAt": "ProcessSlackEvent",
            "States": {
              "ProcessSlackEvent": {
                "Type": "Task",
                "Resource": "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:chehara-dev-processEvents",
                "Comment": "Farm out detection tasks to various AI services",
                "Next": "Parallel"
              },
              "Parallel": {
                "Type": "Parallel",
                "Branches": [
                  {
                    "StartAt": "DetectCelebrity",
                    "States": {
                      "DetectCelebrity": {
                        "Type": "Task",
                        "Resource": "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:chehara-dev-detectCelebrity",
                        "Comment": "Call AWS Rekognition to detect celebrities in the given image",
                        "TimeoutSeconds": 60,
                        "End": true
                      }
                    }
                  },
                  {
                    "StartAt": "DetectLandmark",
                    "States": {
                      "DetectLandmark": {
                        "Type": "Task",
                        "Resource": "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:chehara-dev-detectLandmark",
                        "Comment": "Call Google Vision API to detect landmarks in the given image",
                        "TimeoutSeconds": 60,
                        "End": true
                      }
                    }
                  },
                  {
                    "StartAt": "DetectText",
                    "States": {
                      "DetectText": {
                        "Type": "Task",
                        "Resource": "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:chehara-dev-detectText",
                        "Comment": "Call Google Vision API to detect text in the given image",
                        "TimeoutSeconds": 60,
                        "End": true
                      }
                    }
                  }
                ],
                "Next": "PostMessage"
              },
              "PostMessage": {
                "Type": "Task",
                "Resource": "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:chehara-dev-postMessage",
                "Comment": "Consolidate results from various vision services and post message back to Slack channel",
                "TimeoutSeconds": 60,
                "End": true
              }
            }
          }
        }
      },
      "activities": []
    },
    "artifact": "/Users/skarlekar/Git Repos/chehara/.serverless/chehara.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/chehara/dev/1507064226508-2017-10-03T20:57:06.508Z",
    "artifact": "chehara.zip"
  }
}